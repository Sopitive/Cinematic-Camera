<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>